#!/bin/sh

# Copyright 2004 Sam Hart
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 

unset DEBUG JUST_PRINT_RPMS DOWNLOAD_ONLY ARCH || true
unset UNPACK_TARBALL ADDITIONAL LIST_SUITES || true
DEBUG=yes

TMP_DIR="/tmp/rpmstrap."
TMP_DIR=${TMP_DIR}$(date +%j%H%M%S)
PROGNAME=${0##*/}
PWD=$(pwd)
PWD=${PWD%/}

if [ "$RPMSTRAP_DIR" = "" ]; then
    RPMSTRAP_DIR=./lib
fi

. $RPMSTRAP_DIR/functions

usage()
{
    echo "Usage: $PROGNAME [OPTION]... <suite> <target> [<mirror> [<script>]]"
    echo "Bootstrap RPM-based systems."
    echo
    cat <<EOF
      --arch                 set the target architecture (use if no uname)
                               [ --arch x86_64 ]
      --download-only        download packages, but don't perform installation
      --print-rpms           print the packages to be installed, and exit
      --unpack-tarball       acquire .rpms from a tarball instead of http
      --list-suites          list the available suites this program knows
      --help                 display this help and exit
      --include=A,B,C        adds specified names to the list of base packages
      --exclude=A,B,C        removes specified packages from the list
      --verbose              run in verbose mode
EOF
}

if [ $# != 0 ] ; then
    while true ; do
        case "$1" in
            --help)
                usage
                exit 0
                ;;
            --print-rpms)
                JUST_PRINT_RPMS=yes
                shift
                ;;
            --download-only)
                DOWNLOAD_ONLY=yes
                shift
                ;;
            --list-suites)
                LIST_SUITES=yes
                shift
                ;;
            --arch)
                if [ -n "$2" ] ; then
                    ARCH="$2"
                    shift 2
                else
                    die "option requires an argument $1"
                fi
                ;;
            --unpack-tarball)
                if [ -n "$2" ] ; then
                    if [ ! -f "$2" ] ; then
                        die "$2: No such file or directory"
                    fi
                    UNPACK_TARBALL="$2"
                    shift 2
                else
                    die "option requires an argument $1"
                fi
                ;;
            --include*)
                ADDITIONAL="$(echo $1 | cut -f2 -d"="|tr , " ")"
                shift 1
                ;;
            --exclude*)
                ADDITIONAL="$(echo $1 | cut -f2 -d"="|tr , " ")"
                shift 1
                ;;
            --verbose)
                DEBUG=yes
                export DEBUG
                shift 1
                ;;
            *)
                break
                ;;
        esac
    done
else
    usage_error "You must specify a suite and a target."
fi

if [ -n "$LIST_SUITES" ]; then
    SCRIPT_DIR="$RPMSTRAP_DIR/scripts"
    SUITES=$(ls $SCRIPT_DIR)

    echo "Possible RPM Suites:"
    for a in $SUITES
    do
        printf "\t$a\n"
        # XXX This should be done much cleaner later
    done
else
    if [ "$1" = "" ] && ( [ "$2" = "" ] && [ "$JUST_PRINT_RPMS" = "" ] ); then
        usage_error "You must specify a suite and a target."
    elif [ "$1" = "" ] && ( [ "$2" = "" ] && [ -n $JUST_PRINT_RPMS ] ); then
        usage_error "You must specify a suite with the --print-rpms option."
    fi

    RPMSUITE=$1
    TARGET=$PWD/$2
    TARGET=${TARGET%/}

    SCRIPT="$RPMSTRAP_DIR/scripts/$RPMSUITE"

    . $SCRIPT

    ARCH=i386

    work_out_mirror
    work_out_rpms
    if [ -n "$JUST_PRINT_RPMS" ]; then
        print_rpms
    else
        install_rpms
        cleanup_env
    fi
fi
